"""Initial migration - all models

Revision ID: 9f7af4359136
Revises: 
Create Date: 2025-06-21 20:52:31.951776

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9f7af4359136'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_display_order'), 'categories', ['display_order'], unique=False)
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('difficulty_levels',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('points', sa.Numeric(precision=3, scale=1), nullable=False),
    sa.Column('level_order', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_difficulty_levels_id'), 'difficulty_levels', ['id'], unique=False)
    op.create_index(op.f('ix_difficulty_levels_level_order'), 'difficulty_levels', ['level_order'], unique=False)
    op.create_table('question_tags',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_question_tags_id'), 'question_tags', ['id'], unique=False)
    op.create_table('users',
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('role', sa.Enum('STUDENT', 'INSTRUCTOR', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('assessment_sessions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('IN_PROGRESS', 'COMPLETED', 'ABANDONED', name='assessmentstatus'), nullable=False),
    sa.Column('total_score', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_possible_score', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('completion_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessment_sessions_id'), 'assessment_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_assessment_sessions_status'), 'assessment_sessions', ['status'], unique=False)
    op.create_table('audit_log',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_log_created_at'), 'audit_log', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_log_id'), 'audit_log', ['id'], unique=False)
    op.create_table('sub_themes',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sub_themes_id'), 'sub_themes', ['id'], unique=False)
    op.create_table('assessment_reports',
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.Enum('SUMMARY', 'DETAILED', 'CERTIFICATE', name='reporttype'), nullable=False),
    sa.Column('generated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('report_data', sa.JSON(), nullable=True),
    sa.Column('pdf_path', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['assessment_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessment_reports_id'), 'assessment_reports', ['id'], unique=False)
    op.create_table('category_progress',
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('questions_attempted', sa.Integer(), nullable=False),
    sa.Column('questions_correct', sa.Integer(), nullable=False),
    sa.Column('score_earned', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['assessment_sessions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'category_id', name='unique_session_category')
    )
    op.create_index(op.f('ix_category_progress_id'), 'category_progress', ['id'], unique=False)
    op.create_table('difficulty_level_progress',
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('difficulty_level_id', sa.Integer(), nullable=False),
    sa.Column('questions_attempted', sa.Integer(), nullable=False),
    sa.Column('questions_correct', sa.Integer(), nullable=False),
    sa.Column('single_choice_correct', sa.Integer(), nullable=False),
    sa.Column('multiple_choice_correct', sa.Integer(), nullable=False),
    sa.Column('bonus_earned', sa.Boolean(), nullable=False),
    sa.Column('score_earned', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['difficulty_level_id'], ['difficulty_levels.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['assessment_sessions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'difficulty_level_id', name='unique_session_difficulty')
    )
    op.create_index(op.f('ix_difficulty_level_progress_id'), 'difficulty_level_progress', ['id'], unique=False)
    op.create_table('questions',
    sa.Column('sub_theme_id', sa.Integer(), nullable=False),
    sa.Column('difficulty_level', sa.Enum('NOVICE', 'AMATEUR', 'INITIATE', 'PROFESSIONAL', 'EXPERT', name='difficultylevel'), nullable=False),
    sa.Column('question_type', sa.Enum('SINGLE_CHOICE', 'MULTIPLE_CHOICE', name='questiontype'), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('rationale', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sub_theme_id'], ['sub_themes.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    op.create_index(op.f('ix_questions_is_active'), 'questions', ['is_active'], unique=False)
    op.create_index(op.f('ix_questions_question_type'), 'questions', ['question_type'], unique=False)
    op.create_table('sub_theme_progress',
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('sub_theme_id', sa.Integer(), nullable=False),
    sa.Column('questions_attempted', sa.Integer(), nullable=False),
    sa.Column('questions_correct', sa.Integer(), nullable=False),
    sa.Column('score_earned', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['assessment_sessions.id'], ),
    sa.ForeignKeyConstraint(['sub_theme_id'], ['sub_themes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'sub_theme_id', name='unique_session_subtheme')
    )
    op.create_index(op.f('ix_sub_theme_progress_id'), 'sub_theme_progress', ['id'], unique=False)
    op.create_table('answer_options',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('option_text', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answer_options_id'), 'answer_options', ['id'], unique=False)
    op.create_table('question_tag_mapping',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['question_tags.id'], ),
    sa.PrimaryKeyConstraint('question_id', 'tag_id')
    )
    op.create_table('user_responses',
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('response_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_spent_seconds', sa.Integer(), nullable=False),
    sa.Column('dont_know', sa.Boolean(), nullable=False),
    sa.Column('score_earned', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['assessment_sessions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'question_id', name='unique_session_question')
    )
    op.create_index(op.f('ix_user_responses_id'), 'user_responses', ['id'], unique=False)
    op.create_table('response_answers',
    sa.Column('user_response_id', sa.Integer(), nullable=False),
    sa.Column('answer_option_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['answer_option_id'], ['answer_options.id'], ),
    sa.ForeignKeyConstraint(['user_response_id'], ['user_responses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_response_id', 'answer_option_id', name='unique_response_answer')
    )
    op.create_index(op.f('ix_response_answers_id'), 'response_answers', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_response_answers_id'), table_name='response_answers')
    op.drop_table('response_answers')
    op.drop_index(op.f('ix_user_responses_id'), table_name='user_responses')
    op.drop_table('user_responses')
    op.drop_table('question_tag_mapping')
    op.drop_index(op.f('ix_answer_options_id'), table_name='answer_options')
    op.drop_table('answer_options')
    op.drop_index(op.f('ix_sub_theme_progress_id'), table_name='sub_theme_progress')
    op.drop_table('sub_theme_progress')
    op.drop_index(op.f('ix_questions_question_type'), table_name='questions')
    op.drop_index(op.f('ix_questions_is_active'), table_name='questions')
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_difficulty_level_progress_id'), table_name='difficulty_level_progress')
    op.drop_table('difficulty_level_progress')
    op.drop_index(op.f('ix_category_progress_id'), table_name='category_progress')
    op.drop_table('category_progress')
    op.drop_index(op.f('ix_assessment_reports_id'), table_name='assessment_reports')
    op.drop_table('assessment_reports')
    op.drop_index(op.f('ix_sub_themes_id'), table_name='sub_themes')
    op.drop_table('sub_themes')
    op.drop_index(op.f('ix_audit_log_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_created_at'), table_name='audit_log')
    op.drop_table('audit_log')
    op.drop_index(op.f('ix_assessment_sessions_status'), table_name='assessment_sessions')
    op.drop_index(op.f('ix_assessment_sessions_id'), table_name='assessment_sessions')
    op.drop_table('assessment_sessions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_question_tags_id'), table_name='question_tags')
    op.drop_table('question_tags')
    op.drop_index(op.f('ix_difficulty_levels_level_order'), table_name='difficulty_levels')
    op.drop_index(op.f('ix_difficulty_levels_id'), table_name='difficulty_levels')
    op.drop_table('difficulty_levels')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_index(op.f('ix_categories_display_order'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
